import Config

config :frayt_elixir, FraytElixir.Payments.PaymentRunner, payout_delay: 5 * 60

# Configure your database
config :frayt_elixir, FraytElixir.Repo,
  database: "frayt_elixir_dev",
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with webpack to recompile .js and .css sources.
config :frayt_elixir, FraytElixirWeb.Endpoint,
  http: [port: System.get_env("PORT", "4000")],
  debug_errors: true,
  code_reloader: true,
  check_origin: false,
  watchers: [
    node: [
      "node_modules/webpack/bin/webpack.js",
      "--mode",
      "development",
      "--watch-stdin",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :frayt_elixir, FraytElixirWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/frayt_elixir_web/(live|views)/.*(ex)$",
      ~r"lib/frayt_elixir_web/templates/.*(eex)$"
    ]
  ]

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :frayt_elixir, FraytElixir.Mailer,
  adapter: Bamboo.LocalAdapter,
  deliver_later_strategy: FraytElixir.Mailer.DeliverLaterStrategy

config :waffle,
  storage: Waffle.Storage.Local

config :ex_aws,
  region: "us-east-2",
  json_codec: Jason,
  s3: [
    scheme: "https://",
    host: "s3.us-east-2.amazonaws.com",
    region: "us-east-2"
  ]

config :frayt_elixir, FraytElixir.Branch, org_id: "28"

config :frayt_elixir,
  enable_multistop_ui: true,
  api_version: "2.1",
  photo_url_generator: &FraytElixir.Photo.local_storage_url/1

config :appsignal, :config, active: false

config :cors_plug,
  origin: [:self],
  headers: [
    "sentry-trace",
    "Authorization",
    "Content-Disposition",
    "Content-Type",
    "Accept",
    "Origin",
    "User-Agent",
    "DNT",
    "Cache-Control",
    "Keep-Alive",
    "X-Requested-With",
    "If-Modified-Since",
    "X-CSRF-Token"
  ]

if File.exists?("config/dev.secret.exs") do
  import_config "dev.secret.exs"
end
