defmodule FraytElixirWeb.Admin.AddCompaniesTest do
  use FraytElixirWeb.FeatureCase
  alias FraytElixirWeb.Test.AdminTablePage, as: Admin

  setup [:create_and_login_admin]

  feature "opens and closes modal", %{session: session} do
    insert(:company, name: "Some Name")

    session
    |> Admin.visit_page("companies")
    |> refute_has(css(".modal__header"))
    |> click(css("[phx-click='add_company']"))
    |> assert_has(css(".modal__header h3", text: "Create Company"))
    |> assert_has(css("h4", text: "Add Details"))
    |> click(css(".button", text: "Cancel"))
    |> refute_has(css(".modal__header"))
    |> click(css("a", text: "View Details"))
    |> click(css("[phx-click='add_location']"))
    |> assert_has(css("h4", text: "Add Location"))
    |> click(css(".button", text: "Cancel"))
    |> refute_has(css(".modal__header"))
  end

  feature "add a company", %{session: session} do
    admin1 = insert(:admin_user, role: "sales_rep", name: "Admin User")
    admin2 = insert(:admin_user, role: "sales_rep", name: nil)
    shipper1 = insert(:shipper, first_name: "Alex", last_name: "Smith")
    shipper2 = insert(:shipper, first_name: "David", last_name: "Miller")

    session
    |> Admin.visit_page("companies")
    |> click(css("[phx-click='add_company']"))
    |> fill_in(text_field("company-name"), with: "Company A")
    |> fill_in(text_field("company-email"), with: "company@companya.com")
    |> Admin.toggle_checkbox("[for='account-billing']")
    |> fill_in(text_field("company-terms"), with: "12")
    |> set_value(css("option[value='#{admin2.id}']"), :selected)
    |> click(css(".button.button--primary", text: "Next"))
    |> fill_in(text_field("location-name"), with: "Location 1")
    |> fill_in(text_field("store-id"), with: "12345")
    |> fill_in(text_field("address-1"), with: "708 Walnut Street")
    |> fill_in(text_field("address-2"), with: "Floor 5")
    |> fill_in(text_field("city"), with: "Cincinnati")
    |> fill_in(text_field("state"), with: "OH")
    |> fill_in(text_field("zip-code"), with: "45202")
    |> fill_in(text_field("location-email"), with: "store12345@companya.com")
    |> fill_in(text_field("location-terms"), with: "10")
    |> Admin.assert_selected(css("option[value='#{admin2.id}']"))
    |> set_value(css("option[value='#{admin1.id}']"), :selected)
    |> click(button("Next"))
    |> fill_in(text_field("search_shipper_email_1"), with: shipper1.user.email)
    |> click(css("a", text: "+ Add Another"))
    |> fill_in(text_field("search_shipper_email_2"), with: shipper2.user.email)
    |> click(button("Save"))
    |> assert_has(css("td", text: "Company A"))
    |> assert_has(css("[data-test-id='invoice-period']", text: "12"))
    |> assert_has(css("td", text: admin2.user.email))
    |> click(css("a", text: "View Details"))
    |> assert_has(css("b", text: "Location 1"))
    |> assert_has(css("a", text: "store12345@companya.com"))
    |> click(css("a", text: "View Details"))
    |> assert_has(css("b", text: "Alex Smith"))
    |> assert_has(css("p", text: "0 disabled, 2 approved"))
    |> assert_has(css("b", text: "David Miller"))
    |> assert_has(css("p", text: "Admin User"))
  end

  feature "does not add a company or location with form errors", %{session: session} do
    session
    |> Admin.visit_page("companies")
    |> click(css("[phx-click='add_company']"))
    |> Admin.toggle_checkbox("[for='account-billing']")
    |> click(css(".button.button--primary", text: "Next"))
    |> assert_has(css(".error", text: "can't be blank", count: 2))
    |> fill_in(text_field("company-name"), with: "Company A")
    |> fill_in(text_field("company-terms"), with: "12")
    |> click(css(".button.button--primary", text: "Next"))
    |> click(button("Next"))
    |> assert_has(css(".error", text: "is invalid"))
    |> assert_has(css(".error", text: "can't be blank", count: 4))
    |> fill_in(text_field("location-name"), with: "Location 1")
    |> fill_in(text_field("address-1"), with: "708 Walnut Street")
    |> fill_in(text_field("city"), with: "Cincinnati")
    |> fill_in(text_field("state"), with: "OH")
    |> fill_in(text_field("zip-code"), with: "45202")
    |> click(button("Next"))
    |> fill_in(text_field("search_shipper_email_1"), with: "random@email.com")
    |> click(button("Save"))
    |> assert_has(css(".error", text: "Shipper does not exist"))
    |> clear(text_field("search_shipper_email_1"))
    |> click(button("Save"))
    |> assert_has(css("td", text: "Company A"))
    |> assert_has(css("[data-test-id='invoice-period']", text: "12"))
    |> click(css("a", text: "View Details"))
    |> assert_has(css("b", text: "Location 1"))
    |> assert_has(css("[data-test-id='shipper-count']", text: "0"))
  end

  feature "adds company with no net terms and add location to that company", %{session: session} do
    [shipper1, shipper2] = insert_list(2, :shipper)

    session
    |> Admin.visit_page("companies")
    |> click(css("[phx-click='add_company']"))
    |> fill_in(text_field("company-name"), with: "Company A")
    |> fill_in(text_field("company-email"), with: "company@companya.com")
    |> click(css(".button.button--primary", text: "Next"))
    |> fill_in(text_field("location-name"), with: "Location 1")
    |> fill_in(text_field("store-id"), with: "12345")
    |> fill_in(text_field("address-1"), with: "708 Walnut Street")
    |> fill_in(text_field("address-2"), with: "Floor 5")
    |> fill_in(text_field("city"), with: "Cincinnati")
    |> fill_in(text_field("state"), with: "OH")
    |> fill_in(text_field("zip-code"), with: "45202")
    |> fill_in(text_field("location-email"), with: "store12345@companya.com")
    |> refute_has(text_field("location-terms"))
    |> click(button("Next"))
    |> fill_in(text_field("search_shipper_email_1"), with: shipper1.user.email)
    |> click(button("Save"))
    |> assert_has(css("td", text: "Company A"))
    |> click(css("a", text: "View Details"))
    |> assert_has(css("b", text: "Location 1"))
    |> assert_has(css("a", text: "store12345@companya.com"))
    |> click(css("[phx-click='add_location']"))
    |> fill_in(text_field("location-name"), with: "Location 2")
    |> fill_in(text_field("store-id"), with: "12345")
    |> fill_in(text_field("address-1"), with: "708 Walnut Street")
    |> fill_in(text_field("address-2"), with: "Floor 5")
    |> fill_in(text_field("city"), with: "Cincinnati")
    |> fill_in(text_field("state"), with: "OH")
    |> fill_in(text_field("zip-code"), with: "45202")
    |> fill_in(text_field("location-email"), with: "store12346@companya.com")
    |> refute_has(text_field("location-terms"))
    |> click(button("Next"))
    |> fill_in(text_field("search_shipper_email_1"), with: shipper2.user.email)
    |> click(button("Save"))
    |> assert_has(css("h3", text: "Company A"))
    |> assert_has(css("b", text: "Location 1"))
    |> assert_has(css("a", text: "store12345@companya.com"))
    |> assert_has(css("b", text: "Location 2"))
    |> assert_has(css("a", text: "store12346@companya.com"))
  end
end
